import numpy as np
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

# Generate dummy time series data (sine wave)
def generate_data(seq_len=100):
    x = np.linspace(0, 50, seq_len)
    y = np.sin(x)
    return y

data = generate_data(150)

# Prepare data for LSTM
def create_dataset(series, window=10):
    X, y = [], []
    for i in range(len(series) - window):
        X.append(series[i:i+window])
        y.append(series[i+window])
    return np.array(X), np.array(y)

window_size = 10
X, y = create_dataset(data, window=window_size)
X = X.reshape((X.shape[0], X.shape[1], 1))  # LSTM expects 3D input

# Build LSTM model
model = Sequential([
    LSTM(50, input_shape=(window_size, 1)),
    Dense(1)
])
model.compile(optimizer='adam', loss='mse')
model.fit(X, y, epochs=50, verbose=0)

# Forecast future values
last_window = data[-window_size:]
predictions = []
for _ in range(20):  # Predict 20 future steps
    input_seq = last_window.reshape((1, window_size, 1))
    next_val = model.predict(input_seq, verbose=0)[0][0]
    predictions.append(next_val)
    last_window = np.append(last_window[1:], next_val)

# Plot results
plt.plot(range(len(data)), data, label='Original Data')
plt.plot(range(len(data), len(data)+20), predictions, label='Forecast')
plt.legend()
plt.show()